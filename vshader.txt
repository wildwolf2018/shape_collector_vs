#version 400

layout (location = 0) in vec3 vertexPosition;
layout (location = 1) in vec3 velocitiyInit;
layout (location = 2) in float startTime;
layout (location = 3) in float lifeTime;

out float transp;

uniform mat4 projection;
uniform mat4 viewMatrix;
uniform float time;
uniform float animationStartTime;
uniform float speed;

void main()
{
	gl_PointSize  = 10.0;
	float particleTimeStart = animationStartTime + startTime;
	vec3 velocity = vec3(0.0);
	vec3 pos = vertexPosition;
	if(time > particleTimeStart){
		float age = time - particleTimeStart;
		if(age < lifeTime){
			velocity = speed * velocitiyInit;
			pos = vertexPosition + velocity;
			transp = 1.0 - age / lifeTime;
		}
		else
		{
			transp = 0.0;
		}
	}
	gl_Position = projection * viewMatrix * vec4(pos, 1.0);
}

